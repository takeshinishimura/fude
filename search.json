[{"path":"https://takeshinishimura.github.io/fude/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Takeshi Nishimura Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://takeshinishimura.github.io/fude/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Takeshi Nishimura. Author, copyright holder, maintainer.","code":""},{"path":"https://takeshinishimura.github.io/fude/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nishimura T (2024). fude: Utilities Fude Polygon. R package version 0.3.5.9000,  https://takeshinishimura.github.io/fude/, https://github.com/takeshinishimura/fude.","code":"@Manual{,   title = {fude: Utilities for Fude Polygon},   author = {Takeshi Nishimura},   year = {2024},   note = {R package version 0.3.5.9000,  https://takeshinishimura.github.io/fude/},   url = {https://github.com/takeshinishimura/fude}, }"},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"fude","dir":"","previous_headings":"","what":"Utilities for Fude Polygon","title":"Utilities for Fude Polygon","text":"fude package provides utilities facilitate handling Fude Polygon data downloadable Ministry Agriculture, Forestry Fisheries (MAFF) website. word fude Japanese counter suffix used denote land parcels.","code":""},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"obtaining-data","dir":"","previous_headings":"","what":"Obtaining Data","title":"Utilities for Fude Polygon","text":"Download Fude Polygon data following release site MAFF (available Japanese). https://open.fude.maff.go.jp","code":""},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for Fude Polygon","text":"can install released version fude CRAN : development version GitHub :","code":"install.packages(\"fude\") # install.packages(\"devtools\") devtools::install_github(\"takeshinishimura/fude\")"},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Utilities for Fude Polygon","text":"can allow R read downloaded ZIP file directly without need unzip . prefer using mouse trackpad select files, method particularly popular among R beginners, following approach can taken. can convert local government codes Japanese municipality names convenient management. can also renamed romaji instead Japanese. can download agricultural community boundary data, corresponds Fude Polygon data, MAFF website https://www.maff.go.jp/j/tokei/census/shuraku_data/2020/ma/ (onlyavailable Japanese). can effortlessly create map integrates Fude Polygons agricultural community boundaries.  出典：農林水産省「筆ポリゴンデータ（2022年度公開）」および「農業集落境界データ（2020年度）」を加工して作成。 Polygon data close community borders may divided. avoid , utilize db$fude.  出典：農林水産省「筆ポリゴンデータ（2022年度公開）」および「農業集落境界データ（2020年度）」を加工して作成。 Polygons situated community boundaries divided allocated one communities. need adjust automatic assignment, custom coding necessary. rows require consideration can extracted following command. gghighlight package allows wider range expression.  Source: Created processing Ministry Agriculture, Forestry Fisheries, Fude Polygon Data (released FY2022) Agricultural Community Boundary Data (FY2020).  8 types objects obtained combine_fude() follows. want particular details map, example, execute following code. package may beneficial, especially R beginners, simply wanting draw agricultural community boundaries.  出典：農林水産省「筆ポリゴンデータ（2022年度公開）」および「農業集落境界データ（2020年度）」を加工して作成。 want use mapview(), following.","code":"library(fude) d <- read_fude(\"~/2022_38.zip\") d <- read_fude(file.choose()) d2 <- rename_fude(d) names(d2) #>  [1] \"2022_松山市\"     \"2022_今治市\"     \"2022_宇和島市\"   \"2022_八幡浜市\"   #>  [5] \"2022_新居浜市\"   \"2022_西条市\"     \"2022_大洲市\"     \"2022_伊予市\"     #>  [9] \"2022_四国中央市\" \"2022_西予市\"     \"2022_東温市\"     \"2022_上島町\"     #> [13] \"2022_久万高原町\" \"2022_松前町\"     \"2022_砥部町\"     \"2022_内子町\"     #> [17] \"2022_伊方町\"     \"2022_松野町\"     \"2022_鬼北町\"     \"2022_愛南町\" d3 <- d |> rename_fude(suffix = TRUE, romaji = \"title\") names(d3) #>  [1] \"2022_Matsuyama-shi\"   \"2022_Imabari-shi\"     \"2022_Uwajima-shi\"     #>  [4] \"2022_Yawatahama-shi\"  \"2022_Niihama-shi\"     \"2022_Saijo-shi\"       #>  [7] \"2022_Ozu-shi\"         \"2022_Iyo-shi\"         \"2022_Shikokuchuo-shi\" #> [10] \"2022_Seiyo-shi\"       \"2022_Toon-shi\"        \"2022_Kamijima-cho\"    #> [13] \"2022_Kumakogen-cho\"   \"2022_Matsumae-cho\"    \"2022_Tobe-cho\"        #> [16] \"2022_Uchiko-cho\"      \"2022_Ikata-cho\"       \"2022_Matsuno-cho\"     #> [19] \"2022_Kihoku-cho\"      \"2022_Ainan-cho\" b <- get_boundary(d) library(ggplot2)  db <- combine_fude(d, b, city = \"松山市\", community = \"由良|北浦|鷲ケ巣|門田|馬磯|泊|御手洗|船越\")  ggplot() +   geom_sf(data = db$fude_split, aes(fill = RCOM_NAME)) +   guides(fill = guide_legend(reverse = TRUE, title = \"興居島の集落別耕地\")) +   theme_void() library(ggforce)  ggplot() +   geom_sf(data = db$community, fill = NA) +   geom_sf(data = db$fude, aes(fill = RCOM_ROMAJI)) +   geom_mark_hull(data = db$fude,                   aes(x = point_lng, y = point_lat,                      fill = RCOM_ROMAJI,                      label = RCOM_ROMAJI),                  colour = NA,                  expand = unit(1, \"mm\"),                  radius = unit(1, \"mm\"),                  label.fontsize = 9,                  label.family = \"Hiragino Sans\",                  label.fill = NA,                  label.colour = \"black\",                  label.buffer = unit(4, \"mm\"),                  con.colour = \"gray70\") +   theme_no_axes() +   theme(legend.position = \"none\") db$fude[duplicated(db$fude_split$polygon_uuid), ] #> Simple feature collection with 80 features and 30 fields #> Active geometry column: geometry (with 4 geometries empty) #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.6574 ymin: 33.87414 xmax: 132.6946 ymax: 33.92217 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                             polygon_uuid land_type issue_year edit_year #> 179 95d68fa9-02c8-41c9-a273-ee30465605ff       200       2022      2020 #> 180 17a1301c-1edf-4217-a349-ff152d13cc73       200       2022      2020 #> 187 36c62d0d-444c-412b-b171-b9b6a6a274bb       200       2022      2020 #> 191 2c5e218b-bf8b-444d-85e4-d30de3e951ba       200       2022      2020 #> 204 696bd14d-a0cc-4fb5-94f6-ce73328502ed       200       2022      2020 #> 229 a422c19e-da70-47ff-848f-2d5e30f3fed9       200       2022      2020 #> 237 befbd449-9f38-40c2-8db2-32236ff368b4       200       2022      2020 #> 303 1ca420b2-6563-40ca-aae3-512e59b034de       200       2022      2020 #> 418 55bc275e-9361-4a34-8fdc-e07fa7dcac87       200       2022      2020 #> 527 81d95fa7-a821-407f-aa38-0a5b8a47b8d2       200       2022      2020 #>                                                                                                                                                               history #> 179 [{\"筆ポリゴンID\":\"58eb5fcb-ea9c-49f8-8d38-ae48e573f096\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"58eb5fcb-ea9c-49f8-8d38-ae48e573f096\",\"発生年度\":2020}] #> 180 [{\"筆ポリゴンID\":\"8d856d0a-b4cc-471b-bb0d-7a386aee263a\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"8d856d0a-b4cc-471b-bb0d-7a386aee263a\",\"発生年度\":2020}] #> 187 [{\"筆ポリゴンID\":\"17c4d96b-b7ae-4058-9c97-750961e04191\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"17c4d96b-b7ae-4058-9c97-750961e04191\",\"発生年度\":2020}] #> 191 [{\"筆ポリゴンID\":\"9fbf0d62-5287-4036-8e5e-39448edd7d39\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"9fbf0d62-5287-4036-8e5e-39448edd7d39\",\"発生年度\":2020}] #> 204 [{\"筆ポリゴンID\":\"2c35b35a-1a17-4631-8b65-9c3d5bd567d0\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"2c35b35a-1a17-4631-8b65-9c3d5bd567d0\",\"発生年度\":2020}] #> 229 [{\"筆ポリゴンID\":\"3910f090-033e-4e70-b940-572916e5ada3\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"3910f090-033e-4e70-b940-572916e5ada3\",\"発生年度\":2020}] #> 237 [{\"筆ポリゴンID\":\"079911a5-f6cd-4ea3-ac83-40f85c216a73\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"079911a5-f6cd-4ea3-ac83-40f85c216a73\",\"発生年度\":2020}] #> 303 [{\"筆ポリゴンID\":\"ce292372-6417-432c-8350-81cd0efcae00\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"ce292372-6417-432c-8350-81cd0efcae00\",\"発生年度\":2020}] #> 418 [{\"筆ポリゴンID\":\"91c37533-c2e4-4688-8f20-8b456fea7fef\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"91c37533-c2e4-4688-8f20-8b456fea7fef\",\"発生年度\":2020}] #> 527 [{\"筆ポリゴンID\":\"1359d49c-7df2-4941-bbd0-789a5e7daacc\",\"更新年度\":2021,\"前年同一\":true},{\"筆ポリゴンID\":\"1359d49c-7df2-4941-bbd0-789a5e7daacc\",\"発生年度\":2020}] #>                        last_polygon_uuid prev_last_polygon_uuid #> 179 58eb5fcb-ea9c-49f8-8d38-ae48e573f096                   <NA> #> 180 8d856d0a-b4cc-471b-bb0d-7a386aee263a                   <NA> #> 187 17c4d96b-b7ae-4058-9c97-750961e04191                   <NA> #> 191 9fbf0d62-5287-4036-8e5e-39448edd7d39                   <NA> #> 204 2c35b35a-1a17-4631-8b65-9c3d5bd567d0                   <NA> #> 229 3910f090-033e-4e70-b940-572916e5ada3                   <NA> #> 237 079911a5-f6cd-4ea3-ac83-40f85c216a73                   <NA> #> 303 ce292372-6417-432c-8350-81cd0efcae00                   <NA> #> 418 91c37533-c2e4-4688-8f20-8b456fea7fef                   <NA> #> 527 1359d49c-7df2-4941-bbd0-789a5e7daacc                   <NA> #>     local_government_cd point_lng point_lat land_type_jp             area #> 179              382019  132.6890  33.91362           畑  1868.7192 [m^2] #> 180              382019  132.6729  33.87807           畑  1864.6218 [m^2] #> 187              382019  132.6761  33.88398           畑  1975.0378 [m^2] #> 191              382019  132.6859  33.91254           畑  1840.4697 [m^2] #> 204              382019  132.6831  33.90642           畑  1756.0841 [m^2] #> 229              382019  132.6667  33.88325           畑  1696.4165 [m^2] #> 237              382019  132.6686  33.89156           畑  1678.2258 [m^2] #> 303              382019  132.6886  33.90552           畑   888.0173 [m^2] #> 418              382019  132.6585  33.90284           畑 10079.5286 [m^2] #> 527              382019  132.6875  33.90904           畑  3435.6437 [m^2] #>                  a owner farmer        KEY PREF CITY KCITY RCOM PREF_NAME #> 179  18.687192 [a]              3820102008   38  201    02  008    愛媛県 #> 180  18.646218 [a]              3820102002   38  201    02  002    愛媛県 #> 187  19.750378 [a]              3820102002   38  201    02  002    愛媛県 #> 191  18.404697 [a]              3820102008   38  201    02  008    愛媛県 #> 204  17.560841 [a]              3820102008   38  201    02  008    愛媛県 #> 229  16.964165 [a]              3820102002   38  201    02  002    愛媛県 #> 237  16.782258 [a]              3820102003   38  201    02  003    愛媛県 #> 303   8.880173 [a]              3820102008   38  201    02  008    愛媛県 #> 418 100.795286 [a]              3820102005   38  201    02  005    愛媛県 #> 527  34.356437 [a]              3820102008   38  201    02  008    愛媛県 #>     CITY_NAME KCITY_NAME RCOM_NAME RCOM_KANA HININTEI RCOM_ROMAJI #> 179    松山市   興居島村      門田    かどた        0      Kadota #> 180    松山市   興居島村        泊    とまり        0      Tomari #> 187    松山市   興居島村        泊    とまり        0      Tomari #> 191    松山市   興居島村      門田    かどた        0      Kadota #> 204    松山市   興居島村      門田    かどた        0      Kadota #> 229    松山市   興居島村        泊    とまり        0      Tomari #> 237    松山市   興居島村      船越  ふなこし        0   Funakoshi #> 303    松山市   興居島村      門田    かどた        0      Kadota #> 418    松山市   興居島村    鷲ケ巣  わしがす        0   Washigasu #> 527    松山市   興居島村      門田    かどた        0      Kadota #>     boundary_edit_year        x        y                       geometry #> 179               2020 132.6865 33.91249 POLYGON ((132.6889 33.91384... #> 180               2020 132.6745 33.88193 POLYGON ((132.6726 33.87832... #> 187               2020 132.6745 33.88193 POLYGON ((132.676 33.88372,... #> 191               2020 132.6865 33.91249 POLYGON ((132.6856 33.91279... #> 204               2020 132.6865 33.91249 POLYGON ((132.6829 33.90642... #> 229               2020 132.6745 33.88193 POLYGON ((132.6667 33.88354... #> 237               2020 132.6706 33.89536 POLYGON ((132.6687 33.89186... #> 303               2020 132.6865 33.91249 POLYGON ((132.6887 33.90569... #> 418               2020 132.6637 33.90494 POLYGON ((132.6577 33.90273... #> 527               2020 132.6865 33.91249 POLYGON ((132.6879 33.90909... #>                      centroid #> 179 POINT (132.6865 33.91249) #> 180 POINT (132.6745 33.88193) #> 187 POINT (132.6745 33.88193) #> 191 POINT (132.6865 33.91249) #> 204 POINT (132.6865 33.91249) #> 229 POINT (132.6745 33.88193) #> 237 POINT (132.6706 33.89536) #> 303 POINT (132.6865 33.91249) #> 418 POINT (132.6637 33.90494) #> 527 POINT (132.6865 33.91249) library(dplyr) library(forcats) library(gghighlight)  db$community <- db$community %>%   mutate(across(c(RCOM_NAME, RCOM_KANA, RCOM_ROMAJI), forcats::fct_rev)) db$fude <- db$fude %>%   mutate(across(c(RCOM_NAME, RCOM_KANA, RCOM_ROMAJI), forcats::fct_rev))  ggplot() +   geom_sf(data = db$community, aes(fill = RCOM_NAME), alpha = 0) +   geom_sf(data = db$fude, aes(fill = RCOM_NAME), linewidth = 0) +   gghighlight() +   facet_wrap(vars(RCOM_NAME)) +   theme_void() +   theme(legend.position = \"none\",         text = element_text(family = \"Hiragino Sans\")) ggplot(data = db$fude, aes(x = as.numeric(a), fill = land_type_jp)) +   geom_histogram(position = \"identity\", alpha = .5) +   labs(x = \"面積（a）\",        y = \"頻度\") +   facet_wrap(vars(RCOM_NAME)) +   labs(fill = \"耕地の種類\") +   theme_minimal() +   theme(text = element_text(family = \"Hiragino Sans\")) names(db) #> [1] \"fude\"            \"fude_split\"      \"community\"       \"community_union\" #> [5] \"ov\"              \"lg\"              \"pref\"            \"source\" library(ggrepel) library(cowplot)  db <- combine_fude(d, b, city = \"松山市\", old_village = \"興居島\", community = \"^(?!釣島).*\")  minimap <- ggplot() +   geom_sf(data = db$lg, aes(fill = fill)) +   geom_sf_text(data = db$lg, aes(label = city_kanji), family = \"Hiragino Sans\") +   gghighlight(fill == 1) +   geom_sf(data = db$community_union, fill = \"black\", linewidth = 0) +   theme_void() +   theme(panel.background = element_rect(fill = \"aliceblue\")) +   scale_fill_manual(values = c(\"white\", \"gray\"))  mainmap <- ggplot() +   geom_sf(data = db$community, fill = \"white\") +   geom_sf(data = db$fude, aes(fill = RCOM_NAME)) +   geom_point(data = db$community, aes(x = x, y = y), colour = \"gray\") +   geom_text_repel(data = db$community,                   aes(x = x, y = y, label = RCOM_NAME),                   nudge_x = c(-.01, .01, -.01, -.012, .005, -.01, .01, .01),                   nudge_y = c(.005, .005, 0, .01, -.005, .01, 0, -.005),                   min.segment.length = .01,                   segment.color = \"gray\",                   size = 3,                   family = \"Hiragino Sans\") +   theme_void() +   theme(legend.position = \"none\")  ggdraw(mainmap) +   draw_plot(     {minimap +        geom_rect(aes(xmin = 132.47, xmax = 133.0,                      ymin = 33.72, ymax = 34.05),                  fill = NA,                  colour = \"black\",                  size = .5) +        coord_sf(xlim = c(132.47, 133.0),                 ylim = c(33.72, 34.05),                 expand = FALSE) +        theme(legend.position = \"none\")     },     x = .7,      y = 0,     width = .3,      height = .3) library(ggrepel)  db <- combine_fude(d, b, city = \"西予市\", old_village = \"遊子川\")  ggplot() +   geom_sf(data = db$pref, fill = NA) +   geom_sf(data = db$lg, fill = \"gray\") +   gghighlight(fill == 1,     unhighlighted_params = list(       alpha = .05     )) +   geom_sf(data = db$ov |> filter(fill == 1), colour = NA, fill = \"black\") +   geom_sf_text(data = db$lg |> filter(fill == 1),                aes(label = city_kanji),                size = 3,                nudge_x = -.025, nudge_y = -.025,                family = \"Hiragino Sans\") +   geom_point(data = db$community_union, aes(x = x, y = y), colour = \"black\") +   geom_text_repel(data = db$community_union,                   aes(x = x, y = y),                   label = \"遊子川地区\",                   nudge_x = .3, nudge_y = -.025,                   segment.color = \"black\",                   size = 3,                   family = \"Hiragino Sans\") +   theme_void() library(mapview)  db1 <- combine_fude(d, b, city = \"伊方町\") db2 <- combine_fude(d, b, city = \"八幡浜市\") db3 <- combine_fude(d, b, city = \"西予市\", old_village = \"三瓶|二木生|三島|双岩\") db <- bind_fude(db1, db2, db3)  mapview::mapview(db$fude, zcol = \"RCOM_NAME\", layer.name = \"農業集落名\")"},{"path":"https://takeshinishimura.github.io/fude/reference/bind_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind multiple Fude Polygon data — bind_fude","title":"Bind multiple Fude Polygon data — bind_fude","text":"bind_fude() binds list polygon data. also binds list data combined combine_fude().","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/bind_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind multiple Fude Polygon data — bind_fude","text":"","code":"bind_fude(...)"},{"path":"https://takeshinishimura.github.io/fude/reference/bind_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind multiple Fude Polygon data — bind_fude","text":"... Database lists combined. named elements.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/bind_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind multiple Fude Polygon data — bind_fude","text":"list sf::sf() object(s).","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/bind_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind multiple Fude Polygon data — bind_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d1 <- read_fude(path, stringsAsFactors = FALSE, quiet = TRUE) d2 <- read_fude(path, stringsAsFactors = FALSE, quiet = TRUE) bind_fude(d1, d2) #> $`2021_382019` #> Simple feature collection with 1 feature and 10 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #>   X_color X_opacity X_weight X_fillColor X_fillOpacity local_government_cd #> 1 #000000       0.5        3     #ff0000           0.5              382019 #>             area            a owner farmer                       geometry #> 1 4562.366 [m^2] 45.62366 [a]              POLYGON ((132.7653 33.84575... #>  #> $`2022_382019` #> Simple feature collection with 1 feature and 10 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #>   X_color X_opacity X_weight X_fillColor X_fillOpacity local_government_cd #> 1 #000000       0.5        3     #ff0000           0.5              382019 #>             area            a owner farmer                       geometry #> 1 4562.366 [m^2] 45.62366 [a]              POLYGON ((132.7653 33.84575... #>  #> $`2022_382078` #> Simple feature collection with 1 feature and 10 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.541 ymin: 33.50931 xmax: 132.5415 ymax: 33.50966 #> Geodetic CRS:  WGS 84 #>   X_color X_opacity X_weight X_fillColor X_fillOpacity local_government_cd #> 1 #000000       0.5        3     #ff0000           0.5              382078 #>             area            a owner farmer                       geometry #> 1 1303.233 [m^2] 13.03233 [a]              POLYGON ((132.541 33.50966,... #>"},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"combine_fude() uses agricultural community boundary data reduce Fude Polygon data community units.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"","code":"combine_fude(   data,   boundary,   city,   old_village = \"\",   community = \"\",   year = NULL )"},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"data List sf::sf() objects. boundary List one agricultural community boundary data provided MAFF. city local government name Japanese extracted. case overlapping local government names, must contain prefecture name Japanese prefecture code romaji (e.g., \"Fuchu-shi, 13\", \"fuchu 13\",  \"34 fuchu-shi\",  \"34, FUCHU-CHO\"). Alternatively, 6-digit local government code. old_village String regular expression. One old village name Japanese extracted. community String regular expression. One agricultural community name Japanese extracted. year Year column name data. one applicable local government code, required.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"list sf::sf() objects.","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"","code":"if (FALSE) { # interactive() path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, stringsAsFactors = FALSE) b <- get_boundary(d) db <- combine_fude(d, b, \"\\u677e\\u5c71\\u5e02\", \"\\u57ce\\u6771\", year = 2022) }"},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specified Fude Polygon data — extract_fude","title":"Extract specified Fude Polygon data — extract_fude","text":"extract_fude() extracts specified data list returned read_fude().","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specified Fude Polygon data — extract_fude","text":"","code":"extract_fude(data, year = NULL, city = NULL, list = TRUE)"},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specified Fude Polygon data — extract_fude","text":"data List sf::sf() objects. year Years extracted. city Local government names codes extracted. list logical. FALSE, object extracted longer list.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specified Fude Polygon data — extract_fude","text":"list sf::sf() object(s).","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract specified Fude Polygon data — extract_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, stringsAsFactors = FALSE, quiet = TRUE) d2 <- extract_fude(d, year = 2022)"},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the agricultural community boundary data — get_boundary","title":"Get the agricultural community boundary data — get_boundary","text":"get_boundary() downloads reads one agricultural community boundary data provided MAFF.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the agricultural community boundary data — get_boundary","text":"","code":"get_boundary(data, year = 2020, quiet = FALSE, path = NULL, to_wgs84 = TRUE)"},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the agricultural community boundary data — get_boundary","text":"data List sf::sf() objects. year Year agricultural community boundary data created. quiet logical. Suppress information data read. path Path ZIP file containing agricultural community boundary data; use local ZIP file instead going looking ZIP file. Specify directory containing one ZIP files, ZIP file . to_wgs84 logical. Convert JGD2000 WGS 84.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the agricultural community boundary data — get_boundary","text":"list sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the agricultural community boundary data — get_boundary","text":"","code":"if (FALSE) { # interactive() path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path) b <- get_boundary(d) }"},{"path":"https://takeshinishimura.github.io/fude/reference/lg_code_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Local government code/name correspondence table — lg_code_table","title":"Local government code/name correspondence table — lg_code_table","text":"dataset containing codes/names local governments Japan.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/lg_code_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local government code/name correspondence table — lg_code_table","text":"","code":"lg_code_table"},{"path":"https://takeshinishimura.github.io/fude/reference/lg_code_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Local government code/name correspondence table — lg_code_table","text":"data frame 1,992 rows 6 variables: lg_code Local government codes pref_kanji Prefecture names written kanji city_kanji Local government names written kanji pref_kana Prefecture names written katakana city_kana Local government names written katakana romaji Local government names written romaji","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Itemize the structure of Fude Polygon data — ls_fude","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"ls_fude() lists year local government names (codes) order understand included list returned read_fude().","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"","code":"ls_fude(data)"},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"data List sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"data.frame.","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, stringsAsFactors = FALSE, quiet = TRUE) ls_fude(d) #>    full_names year  names local_government_cd city_kanji        romaji #> 1 2021_382019 2021 382019              382019     松山市 Matsuyama-shi #> 2 2022_382019 2022 382019              382019     松山市 Matsuyama-shi #> 3 2022_382078 2022 382078              382078     大洲市       Ozu-shi"},{"path":"https://takeshinishimura.github.io/fude/reference/pref_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Prefecture code/name correspondence table — pref_table","title":"Prefecture code/name correspondence table — pref_table","text":"dataset containing codes/names prefectures Japan.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/pref_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prefecture code/name correspondence table — pref_table","text":"","code":"pref_table"},{"path":"https://takeshinishimura.github.io/fude/reference/pref_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prefecture code/name correspondence table — pref_table","text":"data frame 47 rows 2 variables: pref_code Prefecture codes pref_kanji Prefecture names written kanji","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Fude Polygon ZIP file — read_fude","title":"Read a Fude Polygon ZIP file — read_fude","text":"read_fude() reads Fude Polygon data list. data can downloaded MAFF website ZIP file, contains one GeoJSON format files. function also work ZIP file created, long change filenames original GeoJSON files.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Fude Polygon ZIP file — read_fude","text":"","code":"read_fude(path, stringsAsFactors = TRUE, quiet = FALSE, supplementary = TRUE)"},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Fude Polygon ZIP file — read_fude","text":"path Path ZIP file containing one GeoJSON format files. stringsAsFactors logical. character vectors converted factors? quiet logical. Suppress information data read. supplementary logical. TRUE, add supplementary information polygon. Default TRUE.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Fude Polygon ZIP file — read_fude","text":"list sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Fude Polygon ZIP file — read_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, stringsAsFactors = FALSE) #> Reading layer `2021_382019' from data source  #>   `/tmp/RtmpyfnTV0/file1a0d672f0663/castle/2021_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382019' from data source  #>   `/tmp/RtmpyfnTV0/file1a0d672f0663/castle/2022_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382078' from data source  #>   `/tmp/RtmpyfnTV0/file1a0d672f0663/castle/2022_382078.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.541 ymin: 33.50931 xmax: 132.5415 ymax: 33.50966 #> Geodetic CRS:  WGS 84"},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the Fude Polygon data — rename_fude","title":"Rename the Fude Polygon data — rename_fude","text":"rename_fude() renames 6-digit local government code list returned read_fude() corresponding Japanese name order make data human-friendly.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the Fude Polygon data — rename_fude","text":"","code":"rename_fude(data, suffix = TRUE, romaji = NULL, quiet = TRUE)"},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the Fude Polygon data — rename_fude","text":"data List sf::sf() objects. suffix logical. FALSE, suffixes \"SHI\" \"KU\" local government names removed. romaji NULL, rename local government name romaji instead Japanese. Romanji format upper case unless specified. \"title\": Title case. \"lower\": Lower case. \"upper\": Upper case. quiet logical. Suppress information data read.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename the Fude Polygon data — rename_fude","text":"list sf::sf() objects.","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename the Fude Polygon data — rename_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, stringsAsFactors = FALSE, quiet = FALSE) #> Reading layer `2021_382019' from data source  #>   `/tmp/RtmpyfnTV0/file1a0d22ca19bc/castle/2021_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382019' from data source  #>   `/tmp/RtmpyfnTV0/file1a0d22ca19bc/castle/2022_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382078' from data source  #>   `/tmp/RtmpyfnTV0/file1a0d22ca19bc/castle/2022_382078.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.541 ymin: 33.50931 xmax: 132.5415 ymax: 33.50966 #> Geodetic CRS:  WGS 84 d2 <- rename_fude(d) d2 <- rename_fude(d, suffix = FALSE) d2 <- d |> rename_fude(romaji = \"upper\")"},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-035","dir":"Changelog","previous_headings":"","what":"fude 0.3.5","title":"fude 0.3.5","text":"CRAN release: 2023-10-08 Simplified return value combine_fude() eliminating reduced version object.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-034","dir":"Changelog","previous_headings":"","what":"fude 0.3.4","title":"fude 0.3.4","text":"CRAN release: 2023-09-19 Support polygon data split.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-033","dir":"Changelog","previous_headings":"","what":"fude 0.3.3","title":"fude 0.3.3","text":"CRAN release: 2023-08-18 Added ability easily draw municipal boundaries.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-032","dir":"Changelog","previous_headings":"","what":"fude 0.3.2","title":"fude 0.3.2","text":"Improved process eliminating duplicate agricultural community names.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-031","dir":"Changelog","previous_headings":"","what":"fude 0.3.1","title":"fude 0.3.1","text":"CRAN release: 2023-07-15 Minor modifications due elapsed time samples long.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-030","dir":"Changelog","previous_headings":"","what":"fude 0.3.0","title":"fude 0.3.0","text":"Added ability combine agricultural community boundary data.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-020","dir":"Changelog","previous_headings":"","what":"fude 0.2.0","title":"fude 0.2.0","text":"CRAN release: 2023-06-14 Improved accuracy Roman renaming.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-011","dir":"Changelog","previous_headings":"","what":"fude 0.1.1","title":"fude 0.1.1","text":"CRAN release: 2023-05-07 Minor improvements. Initial CRAN release.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-010","dir":"Changelog","previous_headings":"","what":"fude 0.1.0","title":"fude 0.1.0","text":"Initial release.","code":""}]
