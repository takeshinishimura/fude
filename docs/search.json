[{"path":"https://takeshinishimura.github.io/fude/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Takeshi Nishimura Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://takeshinishimura.github.io/fude/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Takeshi Nishimura. Author, copyright holder, maintainer.","code":""},{"path":"https://takeshinishimura.github.io/fude/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nishimura T (2023). fude: Utilities Fude Polygon. https://github.com/takeshinishimura/fude, https://takeshinishimura.github.io/fude/.","code":"@Manual{,   title = {fude: Utilities for Fude Polygon},   author = {Takeshi Nishimura},   year = {2023},   note = {https://github.com/takeshinishimura/fude, https://takeshinishimura.github.io/fude/}, }"},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"fude","dir":"","previous_headings":"","what":"Utilities for Fude Polygon","title":"Utilities for Fude Polygon","text":"fude package provides utilities facilitate handling Fude Polygon data downloadable Ministry Agriculture, Forestry Fisheries (MAFF) website. word fude Japanese counter suffix used referring land parcels.","code":""},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"obtaining-data","dir":"","previous_headings":"","what":"Obtaining Data","title":"Utilities for Fude Polygon","text":"Download Fude Polygon data following release site MAFF (Japanese available). https://open.fude.maff.go.jp","code":""},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for Fude Polygon","text":"can install released version fude CRAN : development version GitHub :","code":"install.packages(\"fude\") # install.packages(\"devtools\") devtools::install_github(\"takeshinishimura/fude\")"},{"path":"https://takeshinishimura.github.io/fude/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Utilities for Fude Polygon","text":"can let R read downloaded ZIP file without unzipping . wish use mouse trackpad file selection, especially common among R beginners, can following. can rename local government codes Japanese municipality names easier handling. can also renamed romaji instead Japanese. can download agricultural community boundary data corresponding Fude Polygon data MAFF website https://www.maff.go.jp/j/tokei/census/shuraku_data/2020/ma/index.html. can draw map combining Fude Polygons agricultural community boundaries.  出典：農林水産省が提供する「筆ポリゴンデータ（2022年度公開）」および「農業集落境界データ（2021年度公開）」を加工して作成。 want use mapview(), following.","code":"library(fude) d <- read_fude(\"~/2022_38.zip\") d <- read_fude(file.choose()) d2 <- rename_fude(d) #> 2022_382019 -> 2022_松山市 #> 2022_382027 -> 2022_今治市 #> 2022_382035 -> 2022_宇和島市 #> 2022_382043 -> 2022_八幡浜市 #> 2022_382051 -> 2022_新居浜市 #> 2022_382060 -> 2022_西条市 #> 2022_382078 -> 2022_大洲市 #> 2022_382108 -> 2022_伊予市 #> 2022_382132 -> 2022_四国中央市 #> 2022_382141 -> 2022_西予市 #> 2022_382159 -> 2022_東温市 #> 2022_383562 -> 2022_上島町 #> 2022_383864 -> 2022_久万高原町 #> 2022_384011 -> 2022_松前町 #> 2022_384020 -> 2022_砥部町 #> 2022_384224 -> 2022_内子町 #> 2022_384429 -> 2022_伊方町 #> 2022_384844 -> 2022_松野町 #> 2022_384887 -> 2022_鬼北町 #> 2022_385069 -> 2022_愛南町 d3 <- d |> rename_fude(suffix = TRUE, romaji = \"title\", quiet = TRUE) names(d3) #>  [1] \"2022_Matsuyama-shi\"   \"2022_Imabari-shi\"     \"2022_Uwajima-shi\"     #>  [4] \"2022_Yawatahama-shi\"  \"2022_Niihama-shi\"     \"2022_Saijo-shi\"       #>  [7] \"2022_Ozu-shi\"         \"2022_Iyo-shi\"         \"2022_Shikokuchuo-shi\" #> [10] \"2022_Seiyo-shi\"       \"2022_Toon-shi\"        \"2022_Kamijima-cho\"    #> [13] \"2022_Kumakogen-cho\"   \"2022_Matsumae-cho\"    \"2022_Tobe-cho\"        #> [16] \"2022_Uchiko-cho\"      \"2022_Ikata-cho\"       \"2022_Matsuno-cho\"     #> [19] \"2022_Kihoku-cho\"      \"2022_Ainan-cho\" b <- get_boundary(d2) library(ggplot2)  db <- combine_fude(d2, b, city = \"松山市\", community = \"御手洗|泊|船越|鷲ケ巣|由良|北浦|門田|馬磯\")  ggplot() +   geom_sf(data = db$fude, aes(fill = RCOM_NAME)) +   geom_sf(data = db$boundary, fill = NA) +   guides(fill = guide_legend(reverse = TRUE, title = \"興居島の集落別耕地\")) +   theme_void() library(mapview)  db <- combine_fude(d, b, city = \"Uwajima, 38\", old_village = \"遊子\") mapview::mapview(db$fude, zcol = \"RCOM_NAME\")"},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"combine_fude() uses agricultural community boundary data reduce Fude Polygon data community units.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"","code":"combine_fude(   data,   boundary,   city,   old_village = \"\",   community = \"\",   year = NULL )"},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"data List sf::sf() objects. boundary List one agricultural community boundary data provided MAFF. city local government name Japanese extracted. case overlapping local government names, prefecture name must included (e.g., Fuchu-shi). Alternatively, local government code. old_village String regular expression. One old village name Japanese extracted. community String regular expression. One agricultural community name Japanese extracted. year Year column name data, one applicable local government code.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"list sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/combine_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine the Fude Polygon data with the agricultural community boundary data — combine_fude","text":"","code":"if (FALSE) { # interactive() path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path) b <- get_boundary(d) db <- combine_fude(d, b, \"\\u677e\\u5c71\\u5e02\", \"\\u57ce\\u6771\", year = 2022) }"},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specified Fude Polygon data — extract_fude","title":"Extract specified Fude Polygon data — extract_fude","text":"extract_fude() extracts specified data list returned read_fude().","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specified Fude Polygon data — extract_fude","text":"","code":"extract_fude(data, year = NULL, city = NULL, list = TRUE)"},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specified Fude Polygon data — extract_fude","text":"data List sf::sf() objects. year Years extracted. city Local government names codes extracted. list logical. FALSE, object extracted longer list.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specified Fude Polygon data — extract_fude","text":"list sf::sf() object(s).","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/extract_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract specified Fude Polygon data — extract_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, quiet = TRUE) d2 <- extract_fude(d, year = 2022, city = \"\\u677e\\u5c71\\u5e02\") d |> extract_fude(year = 2022) #> $`2022_382019` #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #>   X_color X_opacity X_weight X_fillColor X_fillOpacity local_government_cd #> 1 #000000       0.5        3     #ff0000           0.5              382019 #>                         geometry #> 1 POLYGON ((132.7653 33.84575... #>  #> $`2022_382078` #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.541 ymin: 33.50931 xmax: 132.5415 ymax: 33.50966 #> Geodetic CRS:  WGS 84 #>   X_color X_opacity X_weight X_fillColor X_fillOpacity local_government_cd #> 1 #000000       0.5        3     #ff0000           0.5              382078 #>                         geometry #> 1 POLYGON ((132.541 33.50966,... #>"},{"path":"https://takeshinishimura.github.io/fude/reference/filter_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Get agricultural community boundary data — filter_fude","title":"Get agricultural community boundary data — filter_fude","text":"filter_fude() uses agricultural community boundary data reduce Fude Polygon data community units.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/filter_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get agricultural community boundary data — filter_fude","text":"","code":"filter_fude(data, boundary, city, community, year = NULL)"},{"path":"https://takeshinishimura.github.io/fude/reference/filter_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get agricultural community boundary data — filter_fude","text":"data List sf::sf() objects. boundary List one agricultural community boundary data provided MAFF. city local government name Japanese extracted. case overlapping local government names, prefecture name must included (e.g., Fuchu-shi). community String regular expression. One agricultural community name Japanese extracted. year Year column name data, one applicable local government code.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/filter_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get agricultural community boundary data — filter_fude","text":"list sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/filter_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get agricultural community boundary data — filter_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path) #> Reading layer `2021_382019' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/RtmpcloDHK/filec4cc373230a7/castle/2021_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382019' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/RtmpcloDHK/filec4cc373230a7/castle/2022_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382078' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/RtmpcloDHK/filec4cc373230a7/castle/2022_382078.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.541 ymin: 33.50931 xmax: 132.5415 ymax: 33.50966 #> Geodetic CRS:  WGS 84 b <- get_boundary(d) #> options:        ENCODING=CP932  #> Reading layer `rcom' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/RtmpcloDHK/MA0001_2020_2020_38/rcom.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 3302 features and 11 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.0123 ymin: 32.88498 xmax: 133.6928 ymax: 34.30165 #> Geodetic CRS:  JGD2000 db <- filter_fude(d, b, \"\\u677e\\u5c71\\u5e02\", \"\\u57ce\\u6771\", year = 2022) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries"},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the agricultural community boundary data — get_boundary","title":"Get the agricultural community boundary data — get_boundary","text":"get_boundary() downloads reads one agricultural community boundary data provided MAFF.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the agricultural community boundary data — get_boundary","text":"","code":"get_boundary(data, year = 2020, quiet = FALSE, to_wgs84 = TRUE)"},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the agricultural community boundary data — get_boundary","text":"data List sf::sf() objects. year Year agricultural community boundary data created. quiet logical. Suppress information data read. to_wgs84 logical. Convert JGD2000 WGS 84.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the agricultural community boundary data — get_boundary","text":"list sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/get_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the agricultural community boundary data — get_boundary","text":"","code":"if (FALSE) { # interactive() path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path) b <- get_boundary(d) }"},{"path":"https://takeshinishimura.github.io/fude/reference/lg_code_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Local government code/name correspondence table — lg_code_table","title":"Local government code/name correspondence table — lg_code_table","text":"dataset containing codes/names local governments Japan.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/lg_code_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local government code/name correspondence table — lg_code_table","text":"","code":"lg_code_table"},{"path":"https://takeshinishimura.github.io/fude/reference/lg_code_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Local government code/name correspondence table — lg_code_table","text":"data frame 1,992 rows 6 variables: lg_code Local government codes pref_kanji Prefecture names written kanji city_kanji Local government names written kanji pref_kana Prefecture names written katakana city_kana Local government names written katakana romaji Local government names written romaji","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Itemize the structure of Fude Polygon data — ls_fude","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"ls_fude() lists year local government names (codes) order understand included list returned read_fude().","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"","code":"ls_fude(data)"},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"data List sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"list.","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/ls_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Itemize the structure of Fude Polygon data — ls_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, quiet = TRUE) ls_fude(d) #> $`2021` #>    full_names  names local_government_cd city_kanji        romaji #> 1 2021_382019 382019              382019     松山市 Matsuyama-shi #>  #> $`2022` #>    full_names  names local_government_cd city_kanji        romaji #> 1 2022_382019 382019              382019     松山市 Matsuyama-shi #> 2 2022_382078 382078              382078     大洲市       Ozu-shi #>"},{"path":"https://takeshinishimura.github.io/fude/reference/pref_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Prefecture code/name correspondence table — pref_table","title":"Prefecture code/name correspondence table — pref_table","text":"dataset containing codes/names prefectures Japan.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/pref_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prefecture code/name correspondence table — pref_table","text":"","code":"pref_table"},{"path":"https://takeshinishimura.github.io/fude/reference/pref_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prefecture code/name correspondence table — pref_table","text":"data frame 47 rows 2 variables: pref_code Prefecture codes pref_kanji Prefecture names written kanji","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Fude Polygon ZIP file — read_fude","title":"Read a Fude Polygon ZIP file — read_fude","text":"read_fude() reads Fude Polygon data list. data can downloaded MAFF website ZIP file, contains one GeoJSON format files. function also work ZIP file created, long change filenames original GeoJSON files.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Fude Polygon ZIP file — read_fude","text":"","code":"read_fude(path, quiet = FALSE)"},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Fude Polygon ZIP file — read_fude","text":"path Path ZIP file containing one GeoJSON format files. quiet logical. Suppress information data read.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Fude Polygon ZIP file — read_fude","text":"list sf::sf() objects.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/read_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Fude Polygon ZIP file — read_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path) #> Reading layer `2021_382019' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/Rtmp01Y0eu/file1082d3bd5a97b/castle/2021_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382019' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/Rtmp01Y0eu/file1082d3bd5a97b/castle/2022_382019.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.7653 ymin: 33.84506 xmax: 132.7662 ymax: 33.84575 #> Geodetic CRS:  WGS 84 #> Reading layer `2022_382078' from data source  #>   `/private/var/folders/33/1nmp7drn6c56394qxrzb2cth0000gn/T/Rtmp01Y0eu/file1082d3bd5a97b/castle/2022_382078.json'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 6 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 132.541 ymin: 33.50931 xmax: 132.5415 ymax: 33.50966 #> Geodetic CRS:  WGS 84"},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the Fude Polygon data — rename_fude","title":"Rename the Fude Polygon data — rename_fude","text":"rename_fude() renames local government code list returned read_fude() corresponding Japanese name order make data human-friendly.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the Fude Polygon data — rename_fude","text":"","code":"rename_fude(data, suffix = TRUE, romaji = NULL, quiet = FALSE)"},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the Fude Polygon data — rename_fude","text":"data List sf::sf() objects. suffix logical. FALSE, suffixes \"SHI\" \"KU\" local government names removed. romaji NULL, rename local government name romaji instead Japanese. Romanji format upper case unless specified. \"title\": Title case. \"lower\": Lower case. \"upper\": Upper case. quiet logical. Suppress information data read.","code":""},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename the Fude Polygon data — rename_fude","text":"list sf::sf() objects.","code":""},{"path":[]},{"path":"https://takeshinishimura.github.io/fude/reference/rename_fude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename the Fude Polygon data — rename_fude","text":"","code":"path <- system.file(\"extdata\", \"castle.zip\", package = \"fude\") d <- read_fude(path, quiet = TRUE) d2 <- rename_fude(d) #> 2021_382019 -> 2021_松山市 #> 2022_382019 -> 2022_松山市 #> 2022_382078 -> 2022_大洲市 d2 <- rename_fude(d, suffix = FALSE) #> 2021_382019 -> 2021_松山 #> 2022_382019 -> 2022_松山 #> 2022_382078 -> 2022_大洲 d2 <- d |> rename_fude(romaji = \"upper\") #> 2021_382019 -> 2021_MATSUYAMA-SHI #> 2022_382019 -> 2022_MATSUYAMA-SHI #> 2022_382078 -> 2022_OZU-SHI"},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-development-version","dir":"Changelog","previous_headings":"","what":"fude (development version)","title":"fude (development version)","text":"Improved process eliminating duplicate agricultural community names.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-031","dir":"Changelog","previous_headings":"","what":"fude 0.3.1","title":"fude 0.3.1","text":"CRAN release: 2023-07-15 Minor modifications due elapsed time samples long.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-030","dir":"Changelog","previous_headings":"","what":"fude 0.3.0","title":"fude 0.3.0","text":"Added ability combine agricultural community boundary data.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-020","dir":"Changelog","previous_headings":"","what":"fude 0.2.0","title":"fude 0.2.0","text":"CRAN release: 2023-06-14 Improved accuracy Roman renaming.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-011","dir":"Changelog","previous_headings":"","what":"fude 0.1.1","title":"fude 0.1.1","text":"CRAN release: 2023-05-07 Minor improvements. Initial CRAN release.","code":""},{"path":"https://takeshinishimura.github.io/fude/news/index.html","id":"fude-010","dir":"Changelog","previous_headings":"","what":"fude 0.1.0","title":"fude 0.1.0","text":"Initial release.","code":""}]
